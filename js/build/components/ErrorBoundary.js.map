{"version":3,"sources":["../../react/components/ErrorBoundary.tsx"],"names":["ErrorBoundary","props","state","error","errorInfo","setState","whiteSpace","toString","componentStack","children","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAKMA,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,SAAS,EAAE;AAA1B,KAAb;AAFiB;AAGlB;;;;sCAEiBD,K,EAAOC,S,EAAW;AAClC;AACA,WAAKC,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAEA,KADK;AAEZC,QAAAA,SAAS,EAAEA;AAFC,OAAd,EAFkC,CAMlC;AACD;;;6BAEQ;AACP,UAAI,KAAKF,KAAL,CAAWE,SAAf,EAA0B;AACxB;AACA,4BACE,8CACE,wDADF,eAEE;AAAS,UAAA,KAAK,EAAE;AAAEE,YAAAA,UAAU,EAAE;AAAd;AAAhB,WACG,KAAKJ,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBI,QAAjB,EADvB,eAEE,+BAFF,EAGG,KAAKL,KAAL,CAAWE,SAAX,CAAqBI,cAHxB,CAFF,CADF;AAUD,OAbM,CAcP;;;AACA,aAAO,KAAKP,KAAL,CAAWQ,QAAlB;AACD;;;;EA/ByBC,KAAK,CAACC,S","sourcesContent":["interface IState {\n  error: Error;\n  errorInfo: React.ErrorInfo;\n}\n\nclass ErrorBoundary extends React.Component<any, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n"],"file":"ErrorBoundary.js"}